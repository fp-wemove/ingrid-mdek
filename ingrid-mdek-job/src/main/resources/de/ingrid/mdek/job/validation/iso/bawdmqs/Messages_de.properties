validation.iso.summary.header.error=Zusammenfassung der Fehlern:
validation.iso.summary.header.passed=Zusammenfassung der bestandenen Checks:
validation.iso.summary.header.warning=Zusammenfassung der Warnungen:
validation.iso.summary.fail=Das XML-Document hat die Validierung nicht bestanden. Anzahl der Fehler: {0,number,integer}.
validation.iso.summary.error=Das XML-Document hat die Validierung nicht bestanden. Anzahl der Fehler: ''{0,number,integer}''. Anzahl der Warnungen: ''{1,number,integer}''.
validation.iso.summary.pass=Das XML-Dokument hat die Validierung bestanden.
validation.iso.summary.warning=Das XML-Document hat die Validierung mit Warnungen bestanden. Anzahl der Fehler: ''{0,number,integer}''. Anzahl der Warnungen: ''{1,number,integer}''.

validation.iso.dataqualityinfo.lineage_or_report.missing.descendant={0}: Das Element an der folgenden Stelle hat den Wert ''dataset'' als ''MD_ScopeCode'' aber hat weder ein ''Qualitätsberich''- noch ein ''Herkunft''-Element als Kind: {1}
validation.iso.dataqualityinfo.lineage_or_report.valid={0}: Das Element an der folgenden Stelle hat den Wert ''dataset'' als ''MD_ScopeCode'' und hat entweder ein ''Qualitätsberich''- noch ein ''Herkunft''-Element als Kind: {1}
validation.iso.conditional.dataset.geographic_identifier.present=Hierarchieebene ist als Datensatz definiert und mindestens ein ''EX_GeographicBoundingBox'' oder ''EX_GeographicDescription'' Element ist vorhanden.
validation.iso.conditional.dataset.geographic_identifier.missing=Wenn Hierarchieebene als Datensatz definiert ist, muss mindestens ein ''EX_GeographicBoundingBox'' oder ''EX_GeographicDescription'' muss auch definiert sein.
validation.iso.conditional.dataset_series_statement.valid=Das ''dqDataQualityInfo'' Element hat einen scope code gleich ''dataset'' oder ''series'', enthält ''source'' und/oder ''processStep'', und hat einen ''statement'' Element.
validation.iso.conditional.dataset_series_statement.invalid=Wenn in einem ''dqDataQualityInfo'' Element ''source'' oder ''processStep'' ist definiert und scope code ist ''dataset'' oder ''series'', dann ''statement'' muss auch definiert sein. Das Problem existiert an der folgenden Stelle: {0}
validation.iso.conditional.lineage.children=Für ''LI_Lineage'' muss entweder ''scope'' oder ''statement'' oder ''processStep'' muss definiert sein. Nicht-konformes Element an der folgenden Stelle gefunden: {0}

validation.iso.tag.dataQualityInfo=Datenqualität

validation.iso.invalid_schema_definition=Das XML-Schema unter ''{0}'' is nicht valid.
validation.iso.fail.schema_validation=Das XML-Document ist nicht valid. Fehlermeldung vom Validator:\n{0}
validation.iso.pass.schema_validation=Validierung gegen ISO 19115 Schema erfolgreich.
validation.iso.xml_document_unreadable=XML Document konnte nicht gelesen werden.

