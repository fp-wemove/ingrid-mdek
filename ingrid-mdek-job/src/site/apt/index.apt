~~~
~~ **************************************************-
~~ ingrid-mdek-job
~~ ==================================================
~~ Copyright (C) 2014 wemove digital solutions GmbH
~~ ==================================================
~~ Licensed under the EUPL, Version 1.1 or ‚Äì as soon they will be
~~ approved by the European Commission - subsequent versions of the
~~ EUPL (the "Licence");
~~ 
~~ You may not use this work except in compliance with the Licence.
~~ You may obtain a copy of the Licence at:
~~ 
~~ http://ec.europa.eu/idabc/eupl5
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the Licence is distributed on an "AS IS" basis,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the Licence for the specific language governing permissions and
~~ limitations under the Licence.
~~ **************************************************#
~~~
Ingrid Jobframework
  
  Dieses Project enthält den Ingrid Communication Server. Das heisst es wird ein Proxy am Server erstellt. 
  Dabei handelt es sich um die IJobRepositoryFacade. Mit hilfe dessen Interfaces und dem Client (siehe Api Module)
  kann man Jobs am Repository anmelden, ausführen und abmelden.
  
  Das Jobframework unterstützt auch das Speichern von Jobs. Das bedeutet das der Job im Speicher gehalten wird und auch auf der 
  Festplatte gespeichert wird. Dadurch wird nach Neustart des Servers der Job wieder in den Speicher geladen und steht anderen Jobs
  bzw. dem Client zut Verfügung.
  
  Die Anmeldung, Abmeldung und Ausführung wird über das Interface de.ingrid.mdek.job.repository.IJobRepositoryFacade mit dem Parameter IngridDocument gehandelt. 
  
---
public interface IJobRepositoryFacade {

	IngridDocument execute(IngridDocument document);
}

---

  Im IngridDocument sind bestimmte Key-Value Paare nöig. Wichtige Key Value Paare sind...
  
  
  
* Anmeldung
  
  * IJobRepository.JOB_ID
  
  Der Value hierzu ist die JobId (String) des Jobs.
  
  * IJobRepository.JOB_DESCRIPTION
  
  Der Value ist das Spring-Xml mit dessen Hilfe der Job instantiiert wird.
  
  * IJobRepository.JOB_PERSIST
  
  Ist hier true angegeben wird der Job im Speicher gehalten und auf Festplatte geschrieben damit dieser beim Neustart des Servers neu geladen wird.
  	

* Ausführung

  * IJobRepository.JOB_ID
  
  Der Value hierzu ist die JobId (String) des Jobs.
  

  * IJobRepository.JOB_METHODS
  
  Der Value ist eine Liste mit de.ingrid.mdek.job.repository.Pair's. Ein Pair enthält als Key den Methodennamen und als Value den Parameter der Methode.
  Hat eine Methode keine Parameter so wird null als Pair-Value gesetzt.
  

  * IJobRepository.JOB_PERSIST
  
  Dieser Parameter gibt an ob nach Ausführung der Job deregistriert wird. Bei true wird der Job nicht deregestriert und bei false wird der Job deregistriert.
  Fehlt der Parameter so wird der Job deregistriert.


* Abmeldung

  * IJobRepository.JOB_ID
  
  Der Value hierzu ist die JobId (String) des Jobs.

  * IJobRepository.JOB_PERSIST
  
  Dieser Parameter gibt an ob nach Ausführung der Job deregistriert wird. Bei true wird der Job nicht deregestriert und bei false wird der Job deregistriert.


  